{"name": "test_reset_password_same_old_password", "status": "failed", "statusDetails": {"message": "AssertionError: The actual message is not the same as expected.", "trace": "self = <tests.test_forgot_password_page.TestForgotPassword object at 0x000001EF92D85150>\n\n    def test_reset_password_same_old_password(self):\n        self.driver_manager.open_railway_page()\n        driver = self.driver_manager.get_driver()\n        base_page = BasePage(driver)\n        railway_window = self.driver_manager.get_current_tab()\n        base_page.open_login_tab()\n        login_page = LoginPage(driver)\n        login_page.click_forgot_password()\n        forgot_password_page = ForgotPasswordPage(driver)\n        forgot_password_page.enter_email_address(username)\n        forgot_password_page.click_send_instruction_btn()\n        self.driver_manager.open_new_tab()\n    \n        self.driver_manager.open_mail_page()\n        mail_page = MailPage(driver)\n        mail_window = self.driver_manager.get_current_tab()\n        mail_page.login_to_email(mail_name, domain_name)\n        before = self.driver_manager.get_current_tabs()\n    \n        mail_page.reset_password()\n    \n        after = self.driver_manager.get_current_tabs()\n    \n        self.driver_manager.switch_to_new_tab(before, after)\n        soft_assert = SoftAssert()\n        soft_assert.check(login_page.is_token_displayed(), \"Token is not display\")\n        login_page.fill_reset_password_form(password, password)\n        login_page.click_reset_password_btn()\n    \n        actual_msg = login_page.get_reset_msg()\n        expected_msg = \"The new password cannot be the same with the current password\"\n        soft_assert.check(actual_msg == expected_msg, \"The actual message is not the same as expected.\")\n>       soft_assert.assert_all()\n\ntest_forgot_password_page.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <base.soft_assert.SoftAssert object at 0x000001EF92D86B10>\n\n    def assert_all(self):\n        if self.errors:\n>           raise AssertionError('\\n'.join(self.errors))\nE           AssertionError: The actual message is not the same as expected.\n\n..\\base\\soft_assert.py:11: AssertionError"}, "attachments": [{"name": "screenshot", "source": "a279a16b-a426-49b9-b352-589e00c60135-attachment.png", "type": "image/png"}], "start": 1720692819368, "stop": 1720692879343, "uuid": "dff3cc46-ab33-45c2-88ca-f5af82ad6d0f", "historyId": "548b792df71c95da958d44b98d4ceb71", "testCaseId": "548b792df71c95da958d44b98d4ceb71", "fullName": "test_forgot_password_page.TestForgotPassword#test_reset_password_same_old_password", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup_and_teardown')"}, {"name": "suite", "value": "test_forgot_password_page"}, {"name": "subSuite", "value": "TestForgotPassword"}, {"name": "host", "value": "TUYETNHI"}, {"name": "thread", "value": "18148-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_forgot_password_page"}]}